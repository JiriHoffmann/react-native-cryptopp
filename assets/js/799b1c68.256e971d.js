"use strict";(self.webpackChunkcryptopp_docs=self.webpackChunkcryptopp_docs||[]).push([[657],{7790:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"0.2.0","label":"0.2.0","banner":null,"badge":true,"className":"docs-version-0.2.0","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Installation","href":"/react-native-cryptopp/","docId":"intro"},{"type":"link","label":"Crypto++ support","href":"/react-native-cryptopp/support/","docId":"support/support"},{"type":"category","label":"AES and AES candidates","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AES","href":"/react-native-cryptopp/aes-and-aes-candidates/aes","docId":"aes-and-aes-candidates/aes"}]},{"type":"category","label":"Hash functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BLAKE2b/BLAKE2s","href":"/react-native-cryptopp/hash-functions/blake2","docId":"hash-functions/blake2"},{"type":"link","label":"Keccak","href":"/react-native-cryptopp/hash-functions/keccak","docId":"hash-functions/keccak"},{"type":"link","label":"LSH","href":"/react-native-cryptopp/hash-functions/lsh","docId":"hash-functions/lsh"},{"type":"link","label":"RIPEMD","href":"/react-native-cryptopp/hash-functions/ripemd","docId":"hash-functions/ripemd"},{"type":"link","label":"SHA/SHA2/SHA3","href":"/react-native-cryptopp/hash-functions/sha","docId":"hash-functions/sha"},{"type":"link","label":"SHAKE","href":"/react-native-cryptopp/hash-functions/shake","docId":"hash-functions/shake"},{"type":"link","label":"SipHash","href":"/react-native-cryptopp/hash-functions/siphash","docId":"hash-functions/siphash"},{"type":"link","label":"SM3","href":"/react-native-cryptopp/hash-functions/sm3","docId":"hash-functions/sm3"},{"type":"link","label":"Tiger","href":"/react-native-cryptopp/hash-functions/tiger","docId":"hash-functions/tiger"},{"type":"link","label":"WHIRLPOOL","href":"/react-native-cryptopp/hash-functions/whirlpool","docId":"hash-functions/whirlpool"}]},{"type":"category","label":"Public-key cryptography","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RSA","href":"/react-native-cryptopp/public-key-cryptography/rsa","docId":"public-key-cryptography/rsa"}]},{"type":"category","label":"Padding schemes for public-key systems","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HDKF","href":"/react-native-cryptopp/padding-schemes/hkdf","docId":"padding-schemes/hkdf"},{"type":"link","label":"PKCS12 PBKDF","href":"/react-native-cryptopp/padding-schemes/pbkdf12","docId":"padding-schemes/pbkdf12"},{"type":"link","label":"PKCS5 PBKDF1","href":"/react-native-cryptopp/padding-schemes/pkcs5_pbkdf1","docId":"padding-schemes/pkcs5_pbkdf1"},{"type":"link","label":"PKCS5 PBKDF2 HMAC","href":"/react-native-cryptopp/padding-schemes/pkcs5_pbkdf2","docId":"padding-schemes/pkcs5_pbkdf2"}]},{"type":"category","label":"Insecure","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Message Digest","href":"/react-native-cryptopp/insecure/message-digest","docId":"insecure/message-digest"}]},{"type":"link","label":"Utilities","href":"/react-native-cryptopp/utils/","docId":"utils/utils"}]},"docs":{"aes-and-aes-candidates/aes":{"id":"aes-and-aes-candidates/aes","title":"AES","description":"AES block size will be determined be the size of the key. Here are the block size for the variout key sizes:","sidebar":"tutorialSidebar"},"hash-functions/blake2":{"id":"hash-functions/blake2","title":"BLAKE2b/BLAKE2s","description":"BLAKE2b","sidebar":"tutorialSidebar"},"hash-functions/keccak":{"id":"hash-functions/keccak","title":"Keccak","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/lsh":{"id":"hash-functions/lsh","title":"LSH","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/ripemd":{"id":"hash-functions/ripemd","title":"RIPEMD","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/sha":{"id":"hash-functions/sha","title":"SHA/SHA2/SHA3","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/shake":{"id":"hash-functions/shake","title":"SHAKE","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/siphash":{"id":"hash-functions/siphash","title":"SipHash","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/sm3":{"id":"hash-functions/sm3","title":"SM3","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/tiger":{"id":"hash-functions/tiger","title":"Tiger","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/whirlpool":{"id":"hash-functions/whirlpool","title":"WHIRLPOOL","description":"Parameters","sidebar":"tutorialSidebar"},"insecure/message-digest":{"id":"insecure/message-digest","title":"Message Digest","description":"MD2","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Installation","description":"Make sure Hermes is enabled in your project.","sidebar":"tutorialSidebar"},"padding-schemes/hkdf":{"id":"padding-schemes/hkdf","title":"HDKF","description":"Parameters","sidebar":"tutorialSidebar"},"padding-schemes/pbkdf12":{"id":"padding-schemes/pbkdf12","title":"PKCS12 PBKDF","description":"Note from Crypyto++ Wiki: New applications should consider using a modern KDF, like HKDF. HKDF is state of the art extract-then-expand derivation function with provable security properties.","sidebar":"tutorialSidebar"},"padding-schemes/pkcs5_pbkdf1":{"id":"padding-schemes/pkcs5_pbkdf1","title":"PKCS5 PBKDF1","description":"Note from Crypyto++ Wiki: New applications should consider using a modern KDF, like HKDF. HKDF is state of the art extract-then-expand derivation function with provable security properties.","sidebar":"tutorialSidebar"},"padding-schemes/pkcs5_pbkdf2":{"id":"padding-schemes/pkcs5_pbkdf2","title":"PKCS5 PBKDF2 HMAC","description":"Note from Crypyto++ Wiki: New applications should consider using a modern KDF, like HKDF. HKDF is state of the art extract-then-expand derivation function with provable security properties.","sidebar":"tutorialSidebar"},"public-key-cryptography/rsa":{"id":"public-key-cryptography/rsa","title":"RSA","description":"This library uses the Cryptop++ PEM_PACK to parse and store RSA keys in the PEM format.","sidebar":"tutorialSidebar"},"support/support":{"id":"support/support","title":"Crypto++ Support","description":"Here is the list of all Crypto++ algorithms supported in React Native. It will be progressively updated as new functionality is added.","sidebar":"tutorialSidebar"},"utils/utils":{"id":"utils/utils","title":"Utilities","description":"randomBytes","sidebar":"tutorialSidebar"}}}')}}]);