"use strict";(self.webpackChunkcryptopp_docs=self.webpackChunkcryptopp_docs||[]).push([[671],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9881:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],p={sidebar_position:0,slug:"/"},l="Installation",c={unversionedId:"intro",id:"intro",title:"Installation",description:"iOS",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/react-native-cryptopp/",editUrl:"https://github.com/JiriHoffmann/react-native-cryptopp/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Crypto++ Support",permalink:"/react-native-cryptopp/support/"}},s={},u=[{value:"iOS",id:"ios",level:4},{value:"Android",id:"android",level:4},{value:"iOS",id:"ios-1",level:4},{value:"Optional: Using pre-compiled Crypto++ library",id:"optional-using-pre-compiled-crypto-library",level:2},{value:"Usage",id:"usage",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install react-native-cryptopp\n# or\nyarn add react-native-cryptopp\n")),(0,i.kt)("h4",{id:"ios"},"iOS"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"cd ios && pod install\n# or\nnpx pod install\n")),(0,i.kt)("p",null,"Make sure ",(0,i.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/hermes"},"Hermes")," is enabled in your project."),(0,i.kt)("p",null,"As mentioned in the README, the Crypto++ library has to be compiled for all CPU architectures (4 on android, 3 on iOS) the first time it is used, then it is cached for subsequent builds."),(0,i.kt)("p",null,"Make sure you ",(0,i.kt)("strong",{parentName:"p"},"DON't")," run the ",(0,i.kt)("inlineCode",{parentName:"p"},"android build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"pod install")," at the same time! Temporary compiled files are saved inside the cryptopp folder and will overwrite each other resulting in issues when they are combined into the final library."),(0,i.kt)("h4",{id:"android"},"Android"),(0,i.kt)("p",null,"You can check the following files for more information about the compilation process:"),(0,i.kt)("p",null,"Location from the root of the project: ",(0,i.kt)("br",null),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules/react-native-cryptopp/android/build/cryptopp_build.txt")," ",(0,i.kt)("br",null),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules/react-native-cryptopp/android/build/cryptopp_error.txt")," ",(0,i.kt)("br",null)),(0,i.kt)("h4",{id:"ios-1"},"iOS"),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"pod install --verbose")," instead to see compilation output."),(0,i.kt)("h2",{id:"optional-using-pre-compiled-crypto-library"},"Optional: Using pre-compiled Crypto++ library"),(0,i.kt)("p",null,"A drag-and-drop pre-compiled version of Crypto++ will be added to GitHub assets via GitHub Actions.\n\ud83d\udea7 TODO \ud83d\udea7"),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import Cryptopp from 'react-native-cryptopp';\n\nconst hash = Cryptopp.hashFunctions.SHA1('Hello World');\n")))}m.isMDXComponent=!0}}]);