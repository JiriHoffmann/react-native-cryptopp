"use strict";(self.webpackChunkcryptopp_docs=self.webpackChunkcryptopp_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":"unreleased","badge":true,"className":"docs-version-current","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Installation","href":"/react-native-cryptopp/next/","docId":"intro"},{"type":"link","label":"Crypto++ support","href":"/react-native-cryptopp/next/support/","docId":"support/support"},{"type":"link","label":"Asynchronous Functionality","href":"/react-native-cryptopp/next/async/","docId":"async/async"},{"type":"category","label":"AES and AES candidates","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AES","href":"/react-native-cryptopp/next/aes-and-aes-candidates/aes","docId":"aes-and-aes-candidates/aes"},{"type":"link","label":"AES Candidates","href":"/react-native-cryptopp/next/aes-and-aes-candidates/aes-candidates","docId":"aes-and-aes-candidates/aes-candidates"}]},{"type":"category","label":"Hash functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Progressive Hashing","href":"/react-native-cryptopp/next/hash-functions/create","docId":"hash-functions/create"},{"type":"link","label":"BLAKE2b/BLAKE2s","href":"/react-native-cryptopp/next/hash-functions/blake2","docId":"hash-functions/blake2"},{"type":"link","label":"Keccak","href":"/react-native-cryptopp/next/hash-functions/keccak","docId":"hash-functions/keccak"},{"type":"link","label":"LSH","href":"/react-native-cryptopp/next/hash-functions/lsh","docId":"hash-functions/lsh"},{"type":"link","label":"RIPEMD","href":"/react-native-cryptopp/next/hash-functions/ripemd","docId":"hash-functions/ripemd"},{"type":"link","label":"SHA/SHA2/SHA3","href":"/react-native-cryptopp/next/hash-functions/sha","docId":"hash-functions/sha"},{"type":"link","label":"SHAKE","href":"/react-native-cryptopp/next/hash-functions/shake","docId":"hash-functions/shake"},{"type":"link","label":"SipHash","href":"/react-native-cryptopp/next/hash-functions/siphash","docId":"hash-functions/siphash"},{"type":"link","label":"SM3","href":"/react-native-cryptopp/next/hash-functions/sm3","docId":"hash-functions/sm3"},{"type":"link","label":"Tiger","href":"/react-native-cryptopp/next/hash-functions/tiger","docId":"hash-functions/tiger"},{"type":"link","label":"WHIRLPOOL","href":"/react-native-cryptopp/next/hash-functions/whirlpool","docId":"hash-functions/whirlpool"},{"type":"link","label":"WHIRLPOOL","href":"/react-native-cryptopp/next/hash-functions/crc32","docId":"hash-functions/crc32"}]},{"type":"category","label":"Key Derivation Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HDKF","href":"/react-native-cryptopp/next/padding-schemes/hkdf","docId":"padding-schemes/hkdf"},{"type":"link","label":"PKCS12 PBKDF","href":"/react-native-cryptopp/next/padding-schemes/pbkdf12","docId":"padding-schemes/pbkdf12"},{"type":"link","label":"PKCS5 PBKDF1","href":"/react-native-cryptopp/next/padding-schemes/pkcs5_pbkdf1","docId":"padding-schemes/pkcs5_pbkdf1"},{"type":"link","label":"PKCS5 PBKDF2 HMAC","href":"/react-native-cryptopp/next/padding-schemes/pkcs5_pbkdf2","docId":"padding-schemes/pkcs5_pbkdf2"},{"type":"link","label":"Scrypt","href":"/react-native-cryptopp/next/padding-schemes/scrypt","docId":"padding-schemes/scrypt"}]},{"type":"category","label":"Message authentication","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CMAC","href":"/react-native-cryptopp/next/message-authentication/cmac","docId":"message-authentication/cmac"},{"type":"link","label":"HMAC","href":"/react-native-cryptopp/next/message-authentication/hmac","docId":"message-authentication/hmac"}]},{"type":"category","label":"Public-key cryptography","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RSA","href":"/react-native-cryptopp/next/public-key-cryptography/rsa","docId":"public-key-cryptography/rsa"}]},{"type":"category","label":"Insecure","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Message Digest","href":"/react-native-cryptopp/next/insecure/message-digest","docId":"insecure/message-digest"}]},{"type":"link","label":"Utilities","href":"/react-native-cryptopp/next/utils/","docId":"utils/utils"}]},"docs":{"aes-and-aes-candidates/aes":{"id":"aes-and-aes-candidates/aes","title":"AES","description":"AES block size will be determined be the size of the key. Here are the block size for the variout key sizes:","sidebar":"tutorialSidebar"},"aes-and-aes-candidates/aes-candidates":{"id":"aes-and-aes-candidates/aes-candidates","title":"AES Candidates","description":"AES candidates have the same function signatures as AES.","sidebar":"tutorialSidebar"},"async/async":{"id":"async/async","title":"Asynchronous Functionality","description":"Cryptopp.async provides exactly the same functionality to the synchronous counterparts, but with the ability to run all computations asynchronously offloaded to another thread. Even complex computations such as creating an RSA key pair can be done without a single FPS drop in the JS thread.","sidebar":"tutorialSidebar"},"hash-functions/blake2":{"id":"hash-functions/blake2","title":"BLAKE2b/BLAKE2s","description":"BLAKE2b","sidebar":"tutorialSidebar"},"hash-functions/crc32":{"id":"hash-functions/crc32","title":"WHIRLPOOL","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/create":{"id":"hash-functions/create","title":"Progressive Hashing","description":"create","sidebar":"tutorialSidebar"},"hash-functions/keccak":{"id":"hash-functions/keccak","title":"Keccak","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/lsh":{"id":"hash-functions/lsh","title":"LSH","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/ripemd":{"id":"hash-functions/ripemd","title":"RIPEMD","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/sha":{"id":"hash-functions/sha","title":"SHA/SHA2/SHA3","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/shake":{"id":"hash-functions/shake","title":"SHAKE","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/siphash":{"id":"hash-functions/siphash","title":"SipHash","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/sm3":{"id":"hash-functions/sm3","title":"SM3","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/tiger":{"id":"hash-functions/tiger","title":"Tiger","description":"Parameters","sidebar":"tutorialSidebar"},"hash-functions/whirlpool":{"id":"hash-functions/whirlpool","title":"WHIRLPOOL","description":"Parameters","sidebar":"tutorialSidebar"},"insecure/message-digest":{"id":"insecure/message-digest","title":"Message Digest","description":"MD2","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Installation","description":"Make sure Hermes is enabled in your project.","sidebar":"tutorialSidebar"},"message-authentication/cmac":{"id":"message-authentication/cmac","title":"CMAC","description":"Generate","sidebar":"tutorialSidebar"},"message-authentication/hmac":{"id":"message-authentication/hmac","title":"HMAC","description":"Generate","sidebar":"tutorialSidebar"},"padding-schemes/hkdf":{"id":"padding-schemes/hkdf","title":"HDKF","description":"Parameters","sidebar":"tutorialSidebar"},"padding-schemes/pbkdf12":{"id":"padding-schemes/pbkdf12","title":"PKCS12 PBKDF","description":"Note from Crypyto++ Wiki: New applications should consider using a modern KDF, like HKDF. HKDF is state of the art extract-then-expand derivation function with provable security properties.","sidebar":"tutorialSidebar"},"padding-schemes/pkcs5_pbkdf1":{"id":"padding-schemes/pkcs5_pbkdf1","title":"PKCS5 PBKDF1","description":"Note from Crypyto++ Wiki: New applications should consider using a modern KDF, like HKDF. HKDF is state of the art extract-then-expand derivation function with provable security properties.","sidebar":"tutorialSidebar"},"padding-schemes/pkcs5_pbkdf2":{"id":"padding-schemes/pkcs5_pbkdf2","title":"PKCS5 PBKDF2 HMAC","description":"Note from Crypyto++ Wiki: New applications should consider using a modern KDF, like HKDF. HKDF is state of the art extract-then-expand derivation function with provable security properties.","sidebar":"tutorialSidebar"},"padding-schemes/scrypt":{"id":"padding-schemes/scrypt","title":"Scrypt","description":"Parameters","sidebar":"tutorialSidebar"},"public-key-cryptography/rsa":{"id":"public-key-cryptography/rsa","title":"RSA","description":"This library uses the Cryptop++ PEM_PACK to parse and store RSA keys in the PEM format.","sidebar":"tutorialSidebar"},"support/support":{"id":"support/support","title":"Crypto++ Support","description":"Here is the list of all Crypto++ algorithms supported in React Native. It will be progressively updated as new functionality is added.","sidebar":"tutorialSidebar"},"utils/utils":{"id":"utils/utils","title":"Utilities","description":"randomBytes","sidebar":"tutorialSidebar"}}}')}}]);